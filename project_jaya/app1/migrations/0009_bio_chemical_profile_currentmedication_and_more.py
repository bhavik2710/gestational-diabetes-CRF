# Generated by Django 4.1.1 on 2022-09-19 18:35

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app1', '0008_daily_bp_daily_glucose_level_drug_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bio_chemical_profile',
            fields=[
                ('patient_id', models.AutoField(primary_key=True, serialize=False)),
                ('Hemoglobin', models.CharField(default='', max_length=2000)),
                ('HbA1c', models.CharField(default='', max_length=2000)),
                ('TSH_uIU', models.CharField(default='', max_length=2000)),
                ('Blood', models.CharField(default='', max_length=2000)),
                ('urea', models.CharField(default='', max_length=2000)),
                ('HIV', models.CharField(default='', max_length=2000)),
                ('Anti', models.CharField(default='', max_length=2000)),
                ('HCV', models.CharField(default='', max_length=2000)),
                ('Antibodies_COI', models.CharField(default='', max_length=2000)),
                ('HBS', models.CharField(default='', max_length=2000)),
                ('Antigen_COI', models.CharField(default='', max_length=2000)),
                ('VDRL', models.CharField(default='', max_length=2000)),
                ('HPLC', models.CharField(default='', max_length=2000)),
                ('Urine', models.CharField(default='', max_length=2000)),
                ('Routine', models.CharField(default='', max_length=2000)),
                ('Colour', models.CharField(default='', max_length=2000)),
                ('Reaction', models.CharField(default='', max_length=2000)),
                ('Sp_Gravity', models.CharField(default='', max_length=2000)),
                ('Protein', models.CharField(default='', max_length=2000)),
                ('Sugar', models.CharField(default='', max_length=2000)),
                ('MICROSCOPIC', models.CharField(default='', max_length=2000)),
                ('RBC', models.CharField(default='', max_length=2000)),
                ('WBC', models.CharField(default='', max_length=2000)),
                ('Epithelial', models.CharField(default='', max_length=2000)),
                ('Cells', models.CharField(default='', max_length=2000)),
                ('Bacteria', models.CharField(default='', max_length=2000)),
                ('Granular', models.CharField(default='', max_length=2000)),
                ('Ca_Oxalate', models.CharField(default='', max_length=2000)),
                ('Tripple_Phosphate', models.CharField(default='', max_length=2000)),
                ('Phosphate', models.CharField(default='', max_length=2000)),
                ('Amorphous', models.CharField(default='', max_length=2000)),
                ('Urate', models.CharField(default='', max_length=2000)),
                ('Yeast', models.CharField(default='', max_length=2000)),
                ('Mucus', models.CharField(default='', max_length=2000)),
                ('SPECIAL', models.CharField(default='', max_length=2000)),
                ('Ketones', models.CharField(default='', max_length=2000)),
                ('Bile_Salts', models.CharField(default='', max_length=2000)),
                ('Hb', models.CharField(default='', max_length=2000)),
                ('Hematocrit', models.CharField(default='', max_length=2000)),
                ('RedBC', models.CharField(default='', max_length=2000)),
                ('WhiteBC', models.CharField(default='', max_length=2000)),
                ('Platelet', models.CharField(default='', max_length=2000)),
                ('MCV', models.CharField(default='', max_length=2000)),
                ('MCH', models.CharField(default='', max_length=2000)),
                ('MCHC', models.CharField(default='', max_length=2000)),
                ('RDW_CV', models.CharField(default='', max_length=2000)),
                ('Neutro', models.CharField(default='', max_length=2000)),
                ('Lympho', models.CharField(default='', max_length=2000)),
                ('Eosino', models.CharField(default='', max_length=2000)),
                ('Mono', models.CharField(default='', max_length=2000)),
                ('NRBC', models.CharField(default='', max_length=2000)),
                ('Baso', models.CharField(default='', max_length=2000)),
                ('NeutroAbsl', models.CharField(default='', max_length=2000)),
                ('Lympho_Abs', models.CharField(default='', max_length=2000)),
                ('Eosino_Abs', models.CharField(default='', max_length=2000)),
                ('Mono_Abs', models.CharField(default='', max_length=2000)),
                ('Baso_Urea', models.CharField(default='', max_length=2000)),
                ('Creatinine', models.CharField(default='', max_length=2000)),
                ('Uric_Acid', models.CharField(default='', max_length=2000)),
                ('Calcium', models.CharField(default='', max_length=2000)),
                ('Phosphorus', models.CharField(default='', max_length=2000)),
                ('Sodium', models.CharField(default='', max_length=2000)),
                ('Potassium', models.CharField(default='', max_length=2000)),
                ('Chloride', models.CharField(default='', max_length=2000)),
                ('Bilirubin_T', models.CharField(default='', max_length=2000)),
                ('Bilirublin_D', models.CharField(default='', max_length=2000)),
                ('Bilirubin_I', models.CharField(default='', max_length=2000)),
                ('ALT', models.CharField(default='', max_length=2000)),
                ('AST', models.CharField(default='', max_length=2000)),
                ('ALP', models.CharField(default='', max_length=2000)),
                ('Total_protein', models.CharField(default='', max_length=2000)),
                ('Albumin', models.CharField(default='', max_length=2000)),
                ('Globulin', models.CharField(default='', max_length=2000)),
                ('A_G_ratio', models.CharField(default='', max_length=2000)),
                ('Vitamin_D3', models.CharField(default='', max_length=2000)),
                ('Iron', models.CharField(default='', max_length=2000)),
                ('Transferrin', models.CharField(default='', max_length=2000)),
                ('Ferritin', models.CharField(default='', max_length=2000)),
                ('TIBC', models.CharField(default='', max_length=2000)),
                ('Vitamin_B12', models.CharField(default='', max_length=2000)),
                ('Serum_Folate', models.CharField(default='', max_length=2000)),
                ('Lipid_Profile', models.CharField(default='', max_length=2000)),
                ('Total_Cholesterol', models.CharField(default='', max_length=2000)),
                ('Triglycerides', models.CharField(default='', max_length=2000)),
                ('VLDL', models.CharField(default='', max_length=2000)),
                ('LDL', models.CharField(default='', max_length=2000)),
                ('HDL', models.CharField(default='', max_length=2000)),
                ('CHOL_HDL', models.CharField(default='', max_length=2000)),
                ('LDL_HDL', models.CharField(default='', max_length=2000)),
            ],
        ),
        migrations.CreateModel(
            name='CurrentMedication',
            fields=[
                ('patient_id', models.AutoField(primary_key=True, serialize=False)),
                ('Drug', models.TextField()),
                ('Dose', models.TextField()),
                ('Timings', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Dietary_recall_24hrs',
            fields=[
                ('patient_id', models.AutoField(primary_key=True, serialize=False)),
                ('Meal_time', models.DateTimeField()),
                ('Food_consumed', models.ImageField(default='', null=True, upload_to='images/')),
                ('Quantity', models.TextField(default='', max_length=2000)),
                ('Date', models.DateField()),
                ('weekday', models.CharField(default='', max_length=2000)),
                ('weekend', models.CharField(default='', max_length=2000)),
                ('Glycemic_index', models.TextField()),
                ('Glycemic_load', models.TextField()),
                ('nutri_supplements', models.TextField()),
                ('Multivitimins', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Dietary_recall_outcome',
            fields=[
                ('patient_id', models.AutoField(primary_key=True, serialize=False)),
                ('weekday', models.CharField(default='', max_length=2000)),
                ('weekend', models.CharField(default='', max_length=2000)),
                ('Glycemic_index', models.TextField()),
                ('Glycemic_load', models.TextField()),
                ('Date', models.DateField()),
                ('RDA', models.CharField(default='', max_length=2000)),
                ('actual_intake', models.CharField(default='', max_length=2000)),
                ('Excess_Deficit', models.CharField(default='', max_length=2000)),
                ('Energy_RDA', models.CharField(default='', max_length=2000)),
                ('Protein_RDA', models.CharField(default='', max_length=2000)),
                ('CHO_RDA', models.CharField(default='', max_length=2000)),
                ('Fat_RDA', models.CharField(default='', max_length=2000)),
                ('Calcium_RDA', models.CharField(default='', max_length=2000)),
                ('Iron_RDA', models.CharField(default='', max_length=2000)),
                ('Zinc_RDA', models.CharField(default='', max_length=2000)),
                ('Magnesium_RDA', models.CharField(default='', max_length=2000)),
                ('Retinol_RDA', models.CharField(default='', max_length=2000)),
                ('B_Carotene_RDA', models.CharField(default='', max_length=2000)),
                ('Thiamin_RDA', models.CharField(default='', max_length=2000)),
                ('Riboflavin_RDA', models.CharField(default='', max_length=2000)),
                ('Niacin_RDA', models.CharField(default='', max_length=2000)),
                ('VitaminB6_RDA', models.CharField(default='', max_length=2000)),
                ('Ascorbic_acid_RDA', models.CharField(default='', max_length=2000)),
                ('Dietray_folate_RDA', models.CharField(default='', max_length=2000)),
                ('VitaminB12_RDA', models.CharField(default='', max_length=2000)),
                ('Energy_AI', models.CharField(default='', max_length=2000)),
                ('Protein_AI', models.CharField(default='', max_length=2000)),
                ('CHO_AI', models.CharField(default='', max_length=2000)),
                ('Fat_AI', models.CharField(default='', max_length=2000)),
                ('Calcium_AI', models.CharField(default='', max_length=2000)),
                ('Iron_AI', models.CharField(default='', max_length=2000)),
                ('Zinc_AI', models.CharField(default='', max_length=2000)),
                ('Magnesium_AI', models.CharField(default='', max_length=2000)),
                ('Retinol_AI', models.CharField(default='', max_length=2000)),
                ('B_Carotene_AI', models.CharField(default='', max_length=2000)),
                ('Thiamin_AI', models.CharField(default='', max_length=2000)),
                ('Riboflavin_AI', models.CharField(default='', max_length=2000)),
                ('Niacin_AI', models.CharField(default='', max_length=2000)),
                ('VitaminB6_AI', models.CharField(default='', max_length=2000)),
                ('Ascorbic_acid_AI', models.CharField(default='', max_length=2000)),
                ('Dietray_folate_AI', models.CharField(default='', max_length=2000)),
                ('VitaminB12_AI', models.CharField(default='', max_length=2000)),
                ('Energy_ED', models.CharField(default='', max_length=2000)),
                ('Protein_ED', models.CharField(default='', max_length=2000)),
                ('CHO_ED', models.CharField(default='', max_length=2000)),
                ('Fat_ED', models.CharField(default='', max_length=2000)),
                ('Calcium_ED', models.CharField(default='', max_length=2000)),
                ('Iron_ED', models.CharField(default='', max_length=2000)),
                ('Zinc_ED', models.CharField(default='', max_length=2000)),
                ('Magnesium_ED', models.CharField(default='', max_length=2000)),
                ('Retinol_ED', models.CharField(default='', max_length=2000)),
                ('B_Carotene_ED', models.CharField(default='', max_length=2000)),
                ('Thiamin_ED', models.CharField(default='', max_length=2000)),
                ('Riboflavin_ED', models.CharField(default='', max_length=2000)),
                ('Niacin_ED', models.CharField(default='', max_length=2000)),
                ('VitaminB6_ED', models.CharField(default='', max_length=2000)),
                ('Ascorbic_acid_ED', models.CharField(default='', max_length=2000)),
                ('Dietray_folate_ED', models.CharField(default='', max_length=2000)),
                ('VitaminB12_ED', models.CharField(default='', max_length=2000)),
                ('Nutritional_Supplements', models.TextField()),
                ('Multivitamin', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Kuppuswamy_scale',
            fields=[
                ('patient_id', models.AutoField(primary_key=True, serialize=False)),
                ('head_of_family', models.CharField(choices=[('10', 'Legislators, Senior Officials & Managers'), ('9', 'Professionals'), ('8', 'Technicians and Associate Professionals'), ('7', 'Clerks'), ('6', 'Skilled Workers and Shop & Market Sales Workers'), ('5', 'Skilled Agricultural & Fishery Workers'), ('4', 'Craft & Related Trade Workers'), ('3', 'Plant & Machine Operators and Assemblers'), ('2', 'Elementary Occupation'), ('1', 'Unemployed')], max_length=2000)),
                ('education_of_family', models.CharField(choices=[('7', 'Profession or Honours'), ('6', 'Graduate'), ('5', 'Intermediate or diploma'), ('4', 'High school certificate'), ('3', 'Middle school certificate'), ('2', 'Primary school certificate Illiterate'), ('1', 'Illiterate')], max_length=2000)),
                ('income', models.CharField(choices=[('12', '≥ 199,862'), ('10', '99,931–199,861'), ('6', '74,756 –99,930'), ('4', '49,962–74,755'), ('3', '29,973– 49,961'), ('2', '10,002–29,972'), ('1', '≤ 10,001')], max_length=2000)),
                ('economic', models.CharField(choices=[('26-29', 'Upper (I)'), ('16-25', 'Upper Middle (II'), ('11-15', 'Lower Middle (III)'), ('5-10', 'Upper Lower (IV)'), ('<5 Lower', 'Lower (V)')], max_length=2000)),
            ],
        ),
        migrations.CreateModel(
            name='Patient_Diet_assessment',
            fields=[
                ('patient_id', models.AutoField(primary_key=True, serialize=False)),
                ('Fchoice', models.CharField(choices=[('Vegetarian', 'Vegetarian'), ('Non-vegetarian', 'Non-vegetarian'), ('Ovo-vegetarian', 'Ovo-vegetarian')], max_length=2000)),
                ('weekdays', models.CharField(choices=[('Early', 'Early'), ('Breakfast', 'Breakfast'), ('Mid-morning', 'Mid-morning'), ('Lunch', 'Lunch'), ('Evening snack', 'Evening snack'), ('Dinner', 'Dinner'), ('Post-dinner', 'Post-dinner')], max_length=2000)),
                ('weekends', models.CharField(choices=[('Early', 'Early'), ('Breakfast', 'Breakfast'), ('Mid-morning', 'Mid-morning'), ('Lunch', 'Lunch'), ('Evening snack', 'Evening snack'), ('Dinner', 'Dinner'), ('Post-dinner', 'Post-dinner')], max_length=2000)),
                ('Q3', models.CharField(choices=[('Everyday', 'Everyday'), ('4-5 times a week', '4-5 times a week'), ('2-3 times a week', '2-3 times a week'), ('Once a week', 'Once a week'), ('Once a month', 'Once a month')], max_length=2000)),
                ('Street_Hawker', models.CharField(choices=[('Daily', 'Daily'), ('Frequently', 'Frequently'), ('Occasionally', 'Occasionally'), ('Never', 'Never')], max_length=2000)),
                ('Restaurant', models.CharField(choices=[('Daily', 'Daily'), ('Frequently', 'Frequently'), ('Occasionally', 'Occasionally'), ('Never', 'Never')], max_length=2000)),
                ('Food_Courts', models.CharField(choices=[('Daily', 'Daily'), ('Frequently', 'Frequently'), ('Occasionally', 'Occasionally'), ('Never', 'Never')], max_length=2000)),
                ('Dhabas', models.CharField(choices=[('Daily', 'Daily'), ('Frequently', 'Frequently'), ('Occasionally', 'Occasionally'), ('Never', 'Never')], max_length=2000)),
                ('Office_canteen', models.CharField(choices=[('Daily', 'Daily'), ('Frequently', 'Frequently'), ('Occasionally', 'Occasionally'), ('Never', 'Never')], max_length=2000)),
            ],
        ),
        migrations.DeleteModel(
            name='biochemical_profile',
        ),
        migrations.DeleteModel(
            name='Current_medication',
        ),
        migrations.DeleteModel(
            name='diet_outcome',
        ),
        migrations.DeleteModel(
            name='Dietary_assessment',
        ),
        migrations.DeleteModel(
            name='dietary_recall',
        ),
        migrations.DeleteModel(
            name='eat_places',
        ),
        migrations.DeleteModel(
            name='Kuppuswamyscale',
        ),
        migrations.RemoveField(
            model_name='physical_exercise',
            name='duration_choice',
        ),
        migrations.RemoveField(
            model_name='physical_exercise',
            name='set_choice',
        ),
        migrations.AlterField(
            model_name='daily_glucose_level_insuline',
            name='set_choice',
            field=models.CharField(choices=[('pre', 'pre'), ('post', 'post')], max_length=2000),
        ),
    ]
